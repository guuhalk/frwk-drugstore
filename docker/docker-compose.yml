version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - frwk-drug-app
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - frwk-drug-app
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - frwk-drug-app
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq/dados:/var/lib/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - frwk-drug-app

  mongo_inventories:
    image : mongo
    container_name: mongo_inventories
    environment:
    - PUID=1000
    - PGID=1000
    volumes:
    - ./mongodb_inventories/database:/data/db
    ports:
    - "27017:27017"
    restart: unless-stopped
    networks:
      - frwk-drug-app

  mysql_drugstores:
    image: mysql:8.0
    container_name: mysql_drugstores
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
    - MYSQL_ROOT_PASSWORD=root
    - MYSQL_DATABASE=drugstoredb
    - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "3306"
    restart: unless-stopped
    volumes:
      - ./mysqldb_drugstores/database:/var/lib/mysql
    networks:
      - frwk-drug-app

  mysql_orders:
    image: mysql:8.0
    container_name: mysql_orders
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
    - MYSQL_ROOT_PASSWORD=root
    - MYSQL_DATABASE=ordersb
    - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "3306"
    restart: unless-stopped
    volumes:
      - ./mysqldb_orders/database:/var/lib/mysql
    networks:
      - frwk-drug-app

  postgres_users:
    image: postgres:14.0
    container_name: postgres_users
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
    - POSTGRES_USER=root
    - POSTGRES_PASSWORD=admin
    - APP_DB_USER=postgres
    - APP_DB_PASS=admin
    - APP_DB_NAME=userdb
    ports:
      - "5432"
    restart: unless-stopped
    volumes:
      - ./postgresdb_users/database:/var/lib/postgresql/data
      - ./postgresdb_users/scripts:/docker-entrypoint-initdb.d/
    networks:
      - frwk-drug-app

  postgres_financials:
    image: postgres:14.0
    container_name: postgres_financials
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
    - POSTGRES_USER=root
    - POSTGRES_PASSWORD=admin
    - APP_DB_USER=postgres
    - APP_DB_PASS=admin
    - APP_DB_NAME=financialdb
    ports:
      - "5432"
    restart: unless-stopped
    volumes:
      - ./postgresdb_financials/database:/var/lib/postgresql/data
      - ./postgresdb_financials/scripts:/docker-entrypoint-initdb.d/
    networks:
      - frwk-drug-app

  auth-server:
    depends_on:
      - "ms-users"
    image: danieldhsd/auth-server
    container_name: auth-server
    restart: on-failure
    ports:
      - "8081:8081"
    networks:
      - frwk-drug-app

  api-gateway:
    depends_on:
      - rabbitmq
    links:
      - rabbitmq
    image: danieldhsd/api-gateway
    container_name: api-gateway
    restart: on-failure
    ports:
      - "8082:8082"
    networks:
      - frwk-drug-app

  ms-drugstores:
    depends_on:
      - "mysql_drugstores"
      - "api-gateway"
    image: danieldhsd/ms-drugstores
    container_name: ms-drugstores
    restart: on-failure
    ports:
      - "8083:8083"
    networks:
      - frwk-drug-app
  
  ms-financial:
    depends_on:
      - "postgres_financials"
      - "api-gateway"
    image: danieldhsd/ms-financial
    container_name: ms-financial
    restart: on-failure
    ports:
      - "8084:8084"
    networks:
      - frwk-drug-app
      
  ms-inventory:
    depends_on:
      - "mongo_inventories"
      - "api-gateway"
    image: danieldhsd/ms-inventory
    container_name: ms-inventory
    restart: on-failure
    ports:
      - "8085:8085"
    networks:
      - frwk-drug-app
      
  ms-orders:
    depends_on:
      - "mysql_orders"
      - "api-gateway"
      - "kafka"
    image: danieldhsd/ms-orders
    container_name: ms-orders
    restart: on-failure
    ports:
      - "8086:8086"
    networks:
      - frwk-drug-app
  
  ms-users:
    depends_on:
      - "postgres_users"
      - "api-gateway"
    image: danieldhsd/ms-users
    container_name: ms-users
    restart: on-failure
    ports:
      - "8087:8087"
    volumes:
      - ./ms_users/user-photos:/frwldrugstore/user-photos
    networks:
      - frwk-drug-app

networks:
  frwk-drug-app:
    driver: bridge
